#!/bin/bash

# This hook will look for a jira ticket number
# in the branch name and automatically prepend 
# it to the beginning of the commit message.
# If the commit message already contains a ticket 
# number, then this script will be skipped.

# This way, you can customize which branches should be skipped when
# prepending commit message. 
if [ -z "$BRANCHES_TO_SKIP" ]; then
  # Some branches will not need a jira ticket prepended.  Specify
  # those branches here.
  BRANCHES_TO_SKIP=(master dev-minor dev-major integration)
fi
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD 2> /dev/null | grep -oE "[A-Z]+-[0-9]+")
TICKET_EXISTS=$(grep -oE "[A-Z]+-[0-9]+" $1)
if [ -n "$BRANCH_NAME" ] && ! [ -n "$TICKET_EXISTS" ]; then
    echo "$BRANCH_NAME $(cat $1)" > $1
fi

BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
BRANCH_IN_COMMIT=$(grep -c "$BRANCH_NAME" $1)

if [ -n "$BRANCH_NAME" ] && ! [[ $BRANCH_EXCLUDED -eq 1 ]] && ! [[ $BRANCH_IN_COMMIT -ge 1 ]]; then 
  sed -i.bak -e "1s/^/$BRANCH_NAME /" $1
fi